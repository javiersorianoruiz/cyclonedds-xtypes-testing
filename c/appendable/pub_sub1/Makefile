# Makefile

#compilation info enabled with execution: V=1 make
ifeq ($(V),1)
Q :=
else
Q := @
endif

#Compilation, autogeneration de code and linking parameteres
CC = gcc #compilador C
CFLAGS = -Wall -Wextra -I/usr/local/lib/cyclonedds/include/
LDLIBS = -lddsc -L/usr/local/lib/cyclonedds/lib/
IDLC = /usr/local/lib/cyclonedds/bin/idlc
IDLC_PARAMETERS = -Wno-implicit-extensibility
BUILD_DIR = build
IDL_FILE = HelloWorldData.idl

#Name binaries and files to be compile
TARGET_PUBLISHER = appendable_publisher1
TARGET_SUBSCRIBER = appendable_subscriber1
SRC_PUBLISHER = $(BUILD_DIR)/$(IDL_FILE:.idl=.c) publisher.c
OBJ_PUBLISHER = $(BUILD_DIR)/$(IDL_FILE:.idl=.o) $(BUILD_DIR)/publisher.o
SRC_SUBSCRIBER= $(BUILD_DIR)/$(IDL_FILE:.idl=.c) subscriber.c
OBJ_SUBSCRIBER = $(BUILD_DIR)/$(IDL_FILE:.idl=.o) $(BUILD_DIR)/subscriber.o

#show values if V=1 (launching: V=1 make)
ifeq ($(V),1)
$(info $$SRC_PUBLISHER is [${SRC_PUBLISHER}])
$(info $$OBJ_PUBLISHER is [${OBJ_PUBLISHER}])
$(info $$SRC_SUBSCRIBER is [${SRC_SUBSCRIBER}])
$(info $$OBJ_SUBSCRIBER is [${OBJ_SUBSCRIBER}])
endif

all: $(BUILD_DIR)/$(TARGET_PUBLISHER) $(BUILD_DIR)/$(TARGET_SUBSCRIBER)

#rule for TARGET_PUBLISHER linking
$(BUILD_DIR)/$(TARGET_PUBLISHER): ${OBJ_PUBLISHER}
	$(Q) echo Linking $@
	$(Q) $(CC) -o $@ $^ ${LDLIBS}

#rule for TARGET_SUBSCRIBER linking
$(BUILD_DIR)/$(TARGET_SUBSCRIBER): ${OBJ_SUBSCRIBER}
	$(Q) echo Linking $@
	$(Q) $(CC) -o $@ $^ ${LDLIBS}

#rule to autogenerate the C code with the IDLC tool 
$(BUILD_DIR)/$(IDL_FILE:.idl=.c): $(IDL_FILE)
	$(Q) echo Compiling with IDLC file IDL $^ to generate $@
	$(Q) $(IDLC) $(IDLC_PARAMETERS) -o `pwd`/$(BUILD_DIR) `pwd`/$^

#rule to compile the autogenerated C code by the IDLC tool
$(BUILD_DIR)/$(IDL_FILE:.idl=.o): $(BUILD_DIR)/$(IDL_FILE:.idl=.c)
	$(Q) echo Compiling autogenerated: $^
	$(Q) $(CC) $(CFLAGS) -c $^ -o $@

#rule to compile publisher.c
$(BUILD_DIR)/publisher.o: publisher.c
	$(Q) echo Compiling $^
	$(Q) $(CC) $(CFLAGS) -c $^ -o $@

#rule to compile subscriber.c
$(BUILD_DIR)/subscriber.o: subscriber.c
	$(Q) echo Compiling $^
	$(Q) $(CC) $(CFLAGS) -c $^ -o $@

.PHONY: clean

clean:
	$(Q) echo make clean: deleting files directory $(BUILD_DIR)
	$(Q) ${RM} ${OBJ_PUBLISHER} ${OBJ_SUBSCRIBER}   # remove object files
	$(Q) ${RM} $(BUILD_DIR)/$(IDL_FILE:.idl=.c) $(BUILD_DIR)/$(IDL_FILE:.idl=.h)
	$(Q) ${RM} $(BUILD_DIR)/$(TARGET_PUBLISHER) $(BUILD_DIR)/$(TARGET_SUBSCRIBER)    # remove main program

# END